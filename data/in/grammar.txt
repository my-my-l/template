P -> S_list;
S_list -> S Semicolon S_list;
S_list -> S Semicolon;
S -> D id;
D -> int;
S -> id = T;
S -> return T;
T -> L_1 ? L_1 : L_1;
T -> L_1;
L_1 -> L_1 and L_2;
L_1 -> L_1 or L_2;
L_1 -> L_2;
L_2 -> L_2 & equal;
L_2 -> L_2 ^ equal;
L_2 -> equal;
equal -> compare == compare;
equal -> compare != compare;
equal -> compare;
compare -> shift > shift;
compare -> shift >= shift;
compare -> shift < shift;
compare -> shift <= shift;
compare -> shift;
shift -> E >> E;
shift -> E << E;
shift -> E;
E -> E + A;
E -> E - A;
E -> A;
A -> A * not;
A -> A / not;
A -> A % not;
A -> not;
not -> ! B;
not -> B;
B -> ( L_1 );
B -> id;
B -> IntConst;